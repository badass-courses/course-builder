import { ImageResponse } from 'next/og'
import { db } from '@/db'
import { contentResource, users } from '@/db/schema'
import { checkCertificateEligibility } from '@/lib/certificates'
import { format } from 'date-fns'
import { and, eq, or, sql } from 'drizzle-orm'

export const runtime = 'edge'
export const revalidate = 60
// export const contentType = 'image/png'

export async function GET(request: Request) {
	try {
		const { searchParams } = new URL(request.url)

		const hasResource = searchParams.has('resource')
		const resourceSlugOrID = hasResource ? searchParams.get('resource') : null
		if (!resourceSlugOrID) {
			return new Response(JSON.stringify({ error: 'Missing resource' }), {
				status: 400,
				headers: { 'Content-Type': 'application/json' },
			})
		}
		const hasUser = searchParams.has('user')
		const userId = hasUser ? searchParams.get('user') : null

		if (!userId) {
			return new Response(JSON.stringify({ error: 'Missing user' }), {
				status: 400,
				headers: { 'Content-Type': 'application/json' },
			})
		}

		const { hasCompletedModule, date } = await checkCertificateEligibility(
			resourceSlugOrID,
			userId,
		)

		if (!hasCompletedModule) {
			return new Response(JSON.stringify({ error: 'Module not completed' }), {
				status: 422,
				headers: { 'Content-Type': 'application/json' },
			})
		}

		const user = await db.query.users.findFirst({
			where: or(eq(users.id, userId), eq(users.email, userId)),
		})

		if (!user) {
			return new Response(JSON.stringify({ error: 'User not found' }), {
				status: 404,
				headers: { 'Content-Type': 'application/json' },
			})
		}

		const resource = await db.query.contentResource.findFirst({
			where: and(
				or(
					eq(
						sql`JSON_EXTRACT (${contentResource.fields}, "$.slug")`,
						resourceSlugOrID,
					),
					eq(contentResource.id, resourceSlugOrID),
				),
			),
		})

		if (!resource) {
			return new Response(JSON.stringify({ error: 'Resource not found' }), {
				status: 404,
				headers: { 'Content-Type': 'application/json' },
			})
		}

		const fontData = await fetch(
			new URL(
				'../../../../public/fonts/Gabarito-Medium-BF651cdf1f3f18e.ttf',
				import.meta.url,
			),
		).then((res) => res.arrayBuffer())

		return new ImageResponse(
			(
				<div
					tw="flex h-full w-full items-center justify-center bg-white flex-col"
					style={{
						fontFamily: 'Maison',
						background: 'linear-gradient(105deg, #FFF 0.91%, #F7F7F9 100%)',
						lineHeight: 1,
						width: 842 * 2,
						height: 595 * 2,
					}}
				>
					<div tw="absolute flex items-center justify-center left-0 top-0 w-full h-full">
						<Background />
					</div>
					<div tw="flex flex-col items-center leading-none text-center justify-center w-full">
						{/* <img
							src={resource?.fields?.coverImage.url}
							width={500}
							height={500}
						/> */}
						<h1
							style={{
								fontSize: 75,
								lineHeight: 0.2,
							}}
							className="font-bold"
						>
							Certificate of Completion
						</h1>
						<div
							style={{
								fontSize: 50,
								maxWidth: 700,
							}}
							tw="flex mt-24 border-b-2 border-gray-500 pb-4 w-full flex-col items-center justify-center text-center"
						>
							{user.name}
						</div>
						<div
							style={{
								fontSize: 24,
								maxWidth: 700,
								lineHeight: 1.3,
							}}
							tw="flex mt-10 w-full flex-col items-center justify-center text-center"
						>
							Has Successfully Completed the {resource?.fields?.title} Workshop.
						</div>
					</div>
					<div tw="absolute flex items-center justify-center left-32 bottom-32">
						<Logo />
					</div>
					<div tw="absolute flex items-center justify-center bottom-24">
						<Signature />
					</div>
					<div tw="absolute flex items-center text-xl justify-center bottom-32 right-32">
						{date && `${format(date, 'MMMM do, y')}`}
					</div>
				</div>
			),
			{
				width: 842 * 2,
				height: 595 * 2,
				fonts: [
					{
						name: 'Maison',
						data: fontData,
						style: 'normal',
					},
				],
			},
		)
	} catch (e: any) {
		return new Response('Failed to generate certificate', { status: 500 })
	}
}

const Signature = () => {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width={425 / 1.8}
			height={180 / 1.8}
			fill="none"
			viewBox="0 0 425 180"
		>
			<path
				fill="#000"
				d="M155.686 58.161c-.12-.72-.6-6.848 17.902-15.138 17.782-7.93 21.146-12.015 21.146-12.015.24-.36.721-.48 1.081-.12.24.24.36.601.12.961-.12.24-10.933 16.46-32.679 45.055 19.703-3.124 37.966-6.368 38.566-6.488.361-.12 1.202-.24 1.562 0 .361.24.481.841.12 1.082-1.802 1.201-17.421 2.763-41.81 7.449a1155.907 1155.907 0 0 1-5.527 7.449c-18.262 23.909-30.517 26.432-38.086 26.432-2.884 0-4.926-.721-6.128-1.322-5.286-2.403-8.049-6.488-6.608-12.856 1.682-8.17 11.294-12.014 24.87-14.898 9.732-2.042 23.429-4.445 30.638-6.247 15.619-20.545 26.191-35.683 30.757-42.171-3.124 2.162-8.53 5.166-17.421 9.13-17.421 7.69-16.941 13.337-16.941 13.457 0 .36-.36.721-.721.841-.36 0-.841-.24-.841-.6Zm-.721 27.273c1.442-1.802 3.004-4.084 4.326-5.887-6.849 1.442-17.421 3.725-26.552 5.287-13.577 2.403-24.27 6.608-25.952 14.177-1.201 5.647 1.202 9.011 5.767 11.173 8.29 3.725 22.828.841 42.411-24.75Zm56.221-15.258c-1.802 1.682-5.647 5.286-7.929 5.406a1.99 1.99 0 0 1-1.442-.6c-.841-.841-1.082-2.043-.481-3.244.721-1.802 3.124-3.845 5.647-3.845 1.922 0 2.884.36 3.484.721.241-.12.361-.36.481-.48s.48-.24.721-.12c.24 0 .48.24.6.48 0 .24 1.442 6.968 9.011 6.968 8.05 0 18.263-5.887 18.383-6.007.24-.24.721-.12.961.24.36.36.24.841-.12 1.082-.481.24-10.693 6.247-19.224 6.247-6.487 0-9.131-4.806-10.092-6.848Zm-8.29 3.724s.12.12.24.12c1.322 0 4.085-2.282 6.248-4.325-.481-.12-1.202-.24-2.403-.24-1.802 0-3.724 1.562-4.205 2.884-.36.72-.24 1.201.12 1.561Zm54.389 14.418 23.067-32.2c-14.537 16.1-26.792 24.03-36.884 24.03-.961 0-1.682 0-2.523-.12-4.926-.721-5.167-3.605-5.167-4.806.241-3.124 3.485-6.368 6.248-6.368.841 0 1.562.36 2.042.841 1.082 1.202.842 3.124.721 3.244 0 .48-.36.721-.841.721-.36-.12-.721-.48-.6-.84 0-.481.12-1.563-.361-2.043-.12-.12-.36-.36-.961-.36-1.922 0-4.566 2.642-4.686 4.925-.12 2.163 1.923 2.884 3.725 3.124 13.817 1.802 31.718-12.615 55.027-44.334v-.12c.24-.12.48-.12.72-.12h.121l.12.12h.12v.12h.12v.12l.12.12v.601h-.12v.12l-34.362 48.059c3.605-3.244 8.29-7.33 12.496-10.453 0 0 .12 0 .12-.12 4.325-3.244 8.17-5.407 9.852-4.806 1.081.48 1.441 1.081 1.561 1.562.121.6-.12 1.562-1.441 2.643-1.682 1.322-4.806 2.523-7.569 2.403 1.081 1.201 2.883 2.403 5.526 2.763 4.926.601 12.495-.96 18.983-7.569.241-.24.841-.24 1.082 0 .36.36.36.841 0 1.081-6.849 6.969-14.778 8.651-20.305 8.05-4.085-.48-6.488-3.124-7.449-4.325-5.046 3.845-11.414 9.371-17.301 14.898-.12.12-.36.24-.601.24-.12 0-.36-.12-.48-.24-.241-.24-.361-.6-.12-.961Zm27.513-19.103c-.841-.36-3.484 1.081-7.089 3.724 2.283.12 5.167-.84 6.849-2.162.72-.601.841-.962.841-1.202 0 0-.121-.24-.601-.36ZM4.61 123.208c4.325-2.884 15.98-8.291 25.471-3.965 11.654-16.22 23.068-33.16 23.308-33.4.24-.361.721-.481 1.082-.241.36.24.48.72.24 1.081-.841 1.202-11.654 17.181-22.948 32.92 6.848-1.201 14.658-2.042 23.549-2.283L79.46 82.358c.24-.36.72-.48 1.081-.24.36.24.48.72.24 1.081L57.235 117.32c4.205 0 8.65 0 13.336.361.48 0 .721.36.721.841 0 .36-.36.721-.84.721-5.047-.361-9.733-.481-14.298-.361L36.69 147.117c-1.802 3.243-3.724 5.406-3.724 5.526-.24.12-.36.24-.601.24-.24 0-.36 0-.48-.12-.361-.24-.361-.721-.12-1.081l4.084-6.007c3.004-5.647 5.647-14.298-1.562-21.506-1.081-1.202-2.282-2.163-3.604-2.884 0 .12-.12.12-.12.12C20.95 134.742 11.458 147.477 7.854 150c-.12.12-.24.12-.36.12-.24 0-.48 0-.601-.24-.36-.361-.24-.841.12-1.081 3.244-2.403 12.135-14.178 21.386-27.033-8.41 1.682-14.778 3.604-19.223 4.926-5.166 1.682-7.209 2.283-7.81.841-.48-1.082.601-2.523 3.244-4.325Zm4.205 2.042c4.326-1.322 10.934-3.364 19.464-5.046-2.043-.721-4.205-.961-6.248-.961-3.484 0-6.728.841-9.01 1.562-5.647 1.922-9.492 4.805-10.093 6.007.841 0 3.244-.841 5.887-1.562Zm45.415-6.368c-7.93.241-15.018 1.082-21.265 2.043.84.6 1.682 1.321 2.523 2.162 5.286 5.527 5.526 11.775 4.085 17.061l14.657-21.266Zm22.808 7.93c-.84 3.124-3.484 4.325-4.805 4.686.48 1.561 2.883 2.643 7.088 2.883 15.98 1.202 27.513-4.806 27.634-4.926.24-.24.72-.24 1.081 0 .24.361.24.841-.12 1.081-.481.481-10.813 5.527-25.952 5.527-.84 0-1.802 0-2.643-.12-5.046-.36-7.93-1.682-8.53-3.965-.12-.12-.12-.36-.12-.48-.12-.121-.12-.241-.24-.361 0-.24.12-.48.24-.721.24-1.682 1.802-3.484 3.364-4.565.72-.601 1.922-1.082 2.643-.601.24.24.6.601.36 1.562Zm-4.565 3.004c1.081-.481 2.403-1.322 3.004-3.124-.842.48-2.403 1.682-3.004 3.124Zm35.593-5.407c.36.24.481.721.24.961 0 .12-.961 1.442-.48 2.403.48.841 1.802 1.442 4.085 1.562.24 0 .48.12.6.36a.761.761 0 0 1 0 .721s-1.802 4.326.481 6.488c1.922 1.922 8.53 3.364 30.637-7.689.481-.12.841 0 1.081.36.241.481 0 .841-.36 1.082-12.135 6.007-21.146 9.131-26.913 9.131-2.403 0-4.325-.601-5.526-1.803-2.283-2.162-1.682-5.526-1.082-7.208-2.282-.361-3.724-1.082-4.325-2.283-.841-1.802.481-3.845.481-3.965.24-.36.721-.36 1.081-.12Zm36.138 0c.36.24.48.721.24.961 0 .12-.961 1.442-.481 2.403.481.841 1.802 1.442 4.085 1.562.24 0 .481.12.601.36.12.241.12.481 0 .721 0 0-1.802 4.326.48 6.488 1.923 1.922 8.531 3.364 30.638-7.689.48-.12.841 0 1.081.36.24.481 0 .841-.36 1.082-12.135 6.007-21.146 9.131-26.913 9.131-2.403 0-4.325-.601-5.527-1.803-2.283-2.162-1.682-5.526-1.081-7.208-2.283-.361-3.725-1.082-4.325-2.283-.841-1.802.48-3.845.48-3.965.241-.36.721-.36 1.082-.12Zm78.428 4.445c.241.361.12.841-.24 1.082-7.449 5.046-31.839 8.89-42.051 8.89-1.562 0-2.643-.12-3.004-.48-.72-.361-1.081-1.081-1.201-1.802-.36-2.884 3.124-6.969 3.484-7.329.361-.361.841-.361 1.082-.12.36.24.36.721.12 1.081-.962 1.081-3.364 4.325-3.124 6.127 0 .361.12.601.48.841 2.403 1.322 34.122-2.282 43.373-8.53.36-.24.841-.12 1.081.24Zm-37.485-6.487c-.361-.241-.481-.721-.24-1.082l4.445-7.088c.24-.361.721-.481 1.081-.241.361.241.481.721.241 1.082l-4.566 7.088a.66.66 0 0 1-.601.361c-.12 0-.24-.12-.36-.12Zm36.025 6.487c.36 0 .721.481.601.962 0 .12-1.322 2.282-5.767 9.371 6.247-4.325 13.936-10.092 16.339-9.612 1.322.241 1.082 1.682.841 2.643-.24 1.322-.36 2.283.481 2.884 1.922 1.682 8.41 1.802 32.8-6.608.48-.12.841.12 1.081.481.12.48-.12.841-.481.961-27.273 9.371-32.319 8.17-34.361 6.367-1.562-1.321-1.202-3.123-.961-4.445 0-.24 0-.601.12-.721-2.043.12-9.251 5.166-18.022 12.015-.24.12-.36.12-.601.12-.12 0-.36 0-.48-.12-.241-.241-.241-.721-.121-.961 3.244-5.527 7.45-12.375 7.57-12.616.36-.6.6-.721.961-.721Zm22.084 17.782c5.407-.481 12.615-1.562 21.266-3.965l12.495-14.417c-.841.721-1.802 1.441-2.763 2.162-9.372 6.969-11.054 6.608-11.895 5.887-.36-.48-.841-1.201-.24-2.643.961-2.523 5.407-5.887 7.209-5.887 1.802 0 2.643 1.202 3.003 2.043a271.975 271.975 0 0 0 10.333-8.05c.24-.241.721-.241.961 0 .36.36.36.721.12 1.081l-16.58 19.103c.12 0 .12-.12.24-.12 29.436-8.65 36.044-13.456 36.164-13.576.361-.241.841-.241 1.082.12.24.36.24.841-.121 1.081-.24.24-6.728 5.046-36.644 13.937-.841.24-1.682.36-2.523.601l-24.75 28.715a.92.92 0 0 1-.601.24c-.12 0-.24-.12-.36-.12-.361-.241-.481-.721-.241-1.082 0-.12 8.411-15.739 4.566-22.227a3.757 3.757 0 0 0-1.081-1.321c-6.849.601-11.294.12-12.015-.721-.24-.24-.36-.721-.24-.961.24-.481.601-1.202 7.329-1.202 2.162 0 3.965.361 5.286 1.322Zm-7.93.24h3.845c-.36 0-.841-.12-1.201-.12-1.082 0-1.923.12-2.644.12Zm7.81 20.545 19.584-22.707c-6.728 1.682-12.856 2.763-17.902 3.244.24.24.36.48.481.841 2.883 4.685.12 13.095-2.163 18.622Zm20.305-32.319c.841.12 3.844-1.682 7.689-4.325-.24-.481-.721-1.562-1.802-1.562-.961 0-4.926 2.883-5.887 5.046-.121.481-.121.721 0 .841Zm48.28-21.626c.961-1.322 1.802-2.643 2.764-4.085 9.011-13.096 18.622-25.711 18.742-25.832.241-.36.721-.36 1.082-.12.36.24.36.721.12 1.082-.12.12-9.732 12.615-18.623 25.711-.721 1.081-1.562 2.162-2.162 3.244h10.332c.361 0 .721.36.721.721 0 .48-.36.841-.721.841h-11.414c-13.096 19.944-12.255 23.668-11.654 24.269 3.605 3.965 28.835-3.724 44.935-9.732.48-.12.841 0 .961.481.24.36 0 .841-.361.961-3.484 1.322-29.315 10.813-41.21 10.813-2.523 0-4.445-.36-5.406-1.442-1.442-1.562-1.682-6.007 10.933-25.35h-7.449a.821.821 0 0 1-.841-.841c0-.361.36-.721.841-.721h8.41Zm67.064 14.898c.361-.12.841 0 .961.36.241.481 0 .841-.36 1.082-10.813 4.805-19.103 6.007-24.63 3.484-1.922-.841-3.124-2.043-3.965-3.004-.601 3.364-2.162 9.131-6.488 9.852-.12.12-.36.12-.48.12-.961 0-1.802-.48-2.283-1.321-.961-1.442-.721-3.725.721-5.647 3.003-4.205 6.368-4.926 6.488-4.926.24-.12.6.12.721.36.12-.24.12-.48.12-.721 0-.36.36-.721.721-.721.36-.12.72.121.841.481 0 .12.841 2.643 4.205 4.205 3.604 1.562 10.573 2.163 23.428-3.604Zm-34.722 10.332c3.244-.6 4.806-5.767 5.286-9.011-.12.121-.24.121-.36.121 0 0-2.884.72-5.407 4.325-1.201 1.682-1.321 3.244-.841 4.085.361.36.721.6 1.322.48Zm34.213-9.852c.361 0 .721.481.601.962 0 .12-1.322 2.282-5.767 9.371 6.248-4.325 13.937-10.092 16.34-9.612 1.322.241 1.081 1.682.841 2.643-.24 1.322-.361 2.283.481 2.884 1.922 1.682 8.41 1.802 32.799-6.608.481-.12.841.12 1.082.481.12.48-.121.841-.481.961-27.273 9.371-32.319 8.17-34.362 6.367-1.562-1.321-1.201-3.123-.961-4.445 0-.24 0-.601.12-.721-2.042.12-9.251 5.166-18.022 12.015-.24.12-.36.12-.6.12-.12 0-.361 0-.481-.12-.24-.241-.24-.721-.12-.961 3.244-5.527 7.449-12.375 7.569-12.616.361-.6.601-.721.961-.721Z"
			/>
		</svg>
	)
}

const Logo = () => {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width={212}
			height={49}
			fill="none"
			viewBox="0 0 212 49"
		>
			<path
				fill={'#000'}
				fillRule="evenodd"
				d="m44.785 4.847 9.188 15.915a7.715 7.715 0 0 1 0 7.692L49.95 35.42 30.08 1h8.044a7.716 7.716 0 0 1 6.662 3.847ZM10.215 44.37 1.027 28.454a7.715 7.715 0 0 1 0-7.692l4.023-6.967 19.871 34.42h-8.044a7.714 7.714 0 0 1-6.662-3.846Zm38.695-7.164a7.033 7.033 0 0 1-3.33.83 7.111 7.111 0 0 1-6.137-3.542L22.017 4.315A6.565 6.565 0 0 0 16.274 1a6.562 6.562 0 0 0-5.742 3.315L6.089 12.01a7.039 7.039 0 0 1 3.33-.83 7.114 7.114 0 0 1 6.137 3.541l17.427 30.177a6.564 6.564 0 0 0 5.742 3.314 6.562 6.562 0 0 0 5.741-3.314l4.444-7.693Zm144.444 4.937c.838-.756 1.256-1.969 1.256-3.643V18.07h-3.533V38.5c0 .64-.15 1.1-.45 1.38-.3.278-.811.418-1.535.418h-1.209v2.976h1.829c1.591 0 2.805-.378 3.642-1.132Zm-2.744-28.599c0 .642.217 1.178.651 1.613.435.434.972.65 1.612.65.621 0 1.147-.216 1.582-.65.434-.435.651-.971.651-1.613 0-.64-.217-1.178-.651-1.611a2.157 2.157 0 0 0-1.582-.652c-.641 0-1.177.218-1.612.652-.434.433-.651.971-.651 1.611Zm-57.783 21.608h-3.533l-10.634-16.09v16.09h-3.534V13.575h3.534l10.633 16.058V13.575h3.534v21.576ZM79.29 23.123c-.516.971-1.344 1.762-2.48 2.37-1.136.61-2.593.915-4.37.915h-3.906v8.742H65V13.606h7.44c1.654 0 3.055.284 4.202.853 1.147.568 2.005 1.338 2.573 2.31.567.972.852 2.056.852 3.254 0 1.096-.26 2.129-.776 3.1Zm-3.843-.512c.661-.61.992-1.473.992-2.589 0-2.356-1.333-3.534-4-3.534h-3.905v7.037h3.906c1.344.002 2.345-.303 3.007-.914Zm13.593-4.092c.856-.484 1.875-.728 3.054-.728v3.659h-.899c-1.384 0-2.433.352-3.147 1.053-.712.703-1.07 1.922-1.07 3.659v8.99h-3.533V18.07h3.534v2.48a5.55 5.55 0 0 1 2.06-2.03Zm6.278 12.71c.744 1.335 1.766 2.368 3.068 3.1 1.303.734 2.759 1.101 4.371 1.101 1.633 0 3.126-.367 4.48-1.1a8.149 8.149 0 0 0 3.208-3.115c.786-1.344 1.179-2.883 1.179-4.62s-.383-3.275-1.147-4.62c-.765-1.343-1.809-2.376-3.131-3.1-1.323-.723-2.8-1.085-4.433-1.085s-3.112.362-4.434 1.085c-1.323.724-2.366 1.757-3.13 3.1-.766 1.345-1.148 2.885-1.148 4.62 0 1.757.373 3.302 1.117 4.635Zm11.934-1.472c-.496.869-1.142 1.519-1.938 1.953a5.274 5.274 0 0 1-2.557.652c-1.426 0-2.609-.5-3.55-1.503-.94-1.003-1.41-2.424-1.41-4.264 0-1.24.227-2.289.682-3.147.454-.858 1.07-1.503 1.845-1.937a5.078 5.078 0 0 1 2.526-.651c.91 0 1.757.216 2.543.65.785.435 1.415 1.082 1.891 1.938.475.858.712 1.907.712 3.147 0 1.24-.248 2.294-.744 3.162Zm32.705-1.829h13.051a11.13 11.13 0 0 0 .124-1.735c0-1.654-.351-3.117-1.054-4.387a7.444 7.444 0 0 0-2.945-2.961c-1.262-.701-2.698-1.054-4.31-1.054-1.673 0-3.156.362-4.448 1.086-1.292.723-2.294 1.751-3.007 3.084-.714 1.333-1.07 2.878-1.07 4.634 0 1.757.366 3.302 1.1 4.635.734 1.334 1.747 2.367 3.038 3.1 1.292.733 2.754 1.1 4.387 1.1 2.005 0 3.685-.5 5.038-1.503 1.354-1.002 2.289-2.289 2.806-3.86h-3.813c-.786 1.592-2.13 2.388-4.031 2.388-1.322 0-2.438-.414-3.347-1.24-.91-.826-1.417-1.923-1.519-3.287Zm8.09-5.983c.91.786 1.375 1.829 1.396 3.131h-9.456c.165-1.323.682-2.372 1.55-3.147.868-.774 1.912-1.162 3.131-1.162 1.344 0 2.47.392 3.379 1.178Zm15.873 4.557 5.518 8.649h-3.999l-3.689-5.797-3.472 5.797h-3.689l5.517-8.4-5.517-8.681h3.998l3.69 5.797 3.472-5.797h3.689l-5.518 8.432Zm12.276 3.907v-9.457h4.156V18.07h-4.155v-4.248h-3.565v4.248h-2.015v2.884h2.015v9.455c0 1.673.422 2.883 1.27 3.627.849.744 2.068 1.116 3.659 1.116h2.79v-2.945h-2.171c-.724 0-1.235-.14-1.535-.418-.299-.28-.449-.739-.449-1.38Zm7.223 4.309c-.434-.435-.651-.972-.651-1.612 0-.64.217-1.18.651-1.612.435-.435.972-.652 1.612-.652.621 0 1.147.217 1.582.652.434.434.651.971.651 1.612 0 .641-.217 1.178-.651 1.612a2.153 2.153 0 0 1-1.582.65c-.641 0-1.177-.217-1.612-.65Zm18.429-.016c-1.065-.485-1.907-1.147-2.526-1.984a4.937 4.937 0 0 1-.992-2.806h3.658c.062.724.407 1.329 1.037 1.814.631.486 1.422.729 2.371.729.993 0 1.762-.191 2.31-.574.547-.382.821-.873.821-1.473 0-.64-.304-1.116-.914-1.426-.609-.31-1.576-.651-2.898-1.023-1.282-.351-2.325-.692-3.131-1.023a5.48 5.48 0 0 1-2.092-1.52c-.589-.681-.884-1.58-.884-2.696 0-.91.268-1.74.805-2.496.538-.754 1.308-1.349 2.31-1.782 1.003-.434 2.154-.651 3.457-.651 1.942 0 3.508.49 4.696 1.472 1.189.982 1.824 2.321 1.906 4.015h-3.534c-.062-.765-.372-1.374-.93-1.828-.558-.455-1.312-.682-2.263-.682-.93 0-1.643.176-2.138.527-.496.352-.745.817-.745 1.394 0 .456.166.838.496 1.147.331.311.733.554 1.209.729.475.176 1.178.397 2.108.665 1.24.331 2.258.666 3.054 1.008a5.691 5.691 0 0 1 2.061 1.503c.579.662.879 1.54.9 2.635 0 .972-.269 1.84-.807 2.604-.537.765-1.297 1.363-2.279 1.798-.981.434-2.134.651-3.456.651-1.342.001-2.545-.242-3.61-.727Z"
				clipRule="evenodd"
			/>
		</svg>
	)
}

const Background = () => {
	return (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width={842 * 2}
			height={595 * 2}
			fill="none"
			viewBox="0 0 842 595"
		>
			<path fill="#fff" d="M0 0h842v595H0z" />
			<circle
				cx="22.102"
				cy="25.244"
				r="5.102"
				fill="#fff"
				stroke="#000"
				stroke-width="2"
			/>
			<path
				fill="#000"
				d="M794.262 25.244h1v-1h-1v1Zm-746.524 0v-1h-1v1h1Zm772.16 25.636h1v-1h-1v1Zm0 493.24v1h1v-1h-1Zm-25.636 25.636v1h1v-1h-1Zm-746.524 0h-1v1h1v-1ZM22.102 544.12h-1v1h1v-1Zm0-493.24v-1h-1v1h1Zm772.16-26.636H47.738v2h746.524v-2Zm25.636 25.636c-13.606 0-24.636-11.03-24.636-24.636h-2c0 14.711 11.925 26.636 26.636 26.636v-2Zm1 494.24V50.88h-2v493.24h2Zm-25.636 25.636c0-13.606 11.03-24.636 24.636-24.636v-2c-14.711 0-26.636 11.925-26.636 26.636h2Zm-747.524 1h746.524v-2H47.738v2ZM22.102 545.12c13.606 0 24.636 11.03 24.636 24.636h2c0-14.711-11.925-26.636-26.636-26.636v2Zm-1-494.24v493.24h2V50.88h-2Zm25.636-25.636c0 13.606-11.03 24.636-24.636 24.636v2c14.71 0 26.636-11.925 26.636-26.636h-2Z"
			/>
			<path
				stroke="#9C9C9C"
				d="M54.257 32.243h733.486c0 13.795 11.183 24.977 24.977 24.977v480.56c-13.794 0-24.977 11.182-24.977 24.977H54.257c0-13.795-11.183-24.977-24.977-24.977V57.22c13.794 0 24.977-11.182 24.977-24.977Z"
			/>
			<circle
				cx="22.102"
				cy="569.756"
				r="5.102"
				fill="#fff"
				stroke="#000"
				stroke-width="2"
			/>
			<circle
				cx="819.898"
				cy="25.244"
				r="5.102"
				fill="#fff"
				stroke="#000"
				stroke-width="2"
			/>
			<circle
				cx="819.898"
				cy="569.756"
				r="5.102"
				fill="#fff"
				stroke="#000"
				stroke-width="2"
			/>
		</svg>
	)
}
