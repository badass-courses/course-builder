// EXAMPLE USAGE
// with resource: https://valuebased.design/api/og?resource=[SLUG_OR_ID]
// with custom title: https://valuebased.design/api/og?title=ANYTHING

import { ImageResponse } from 'next/og'
import { db } from '@/db'
import { contentResource, products } from '@/db/schema'
import { and, eq, or, sql } from 'drizzle-orm'

export const runtime = 'edge'
export const revalidate = 60
// export const contentType = 'image/png'

export async function GET(request: Request) {
	try {
		const { searchParams } = new URL(request.url)
		const resourceTypesWithImages = ['workshop', 'tutorial', 'self-paced']
		const hasResource = searchParams.has('resource')
		const resourceSlugOrID = hasResource ? searchParams.get('resource') : null
		const hasTitle = searchParams.has('title')
		let title
		let image
		if (resourceSlugOrID && !hasTitle) {
			let resource = await db.query.contentResource.findFirst({
				where: and(
					or(
						eq(
							sql`JSON_EXTRACT (${contentResource.fields}, "$.slug")`,
							resourceSlugOrID,
						),
						eq(contentResource.id, resourceSlugOrID),
					),
				),
			})
			let product
			if (!resource) {
				product = await db.query.products.findFirst({
					where: and(
						or(
							eq(
								sql`JSON_EXTRACT (${products.fields}, "$.slug")`,
								resourceSlugOrID,
							),
							eq(products.id, resourceSlugOrID),
						),
					),
				})
			}

			title = resource?.fields?.title || product?.name

			if (resource && resourceTypesWithImages.includes(resource.type)) {
				image = resource?.fields?.coverImage?.url || product?.fields?.image?.url
			}
		} else {
			if (hasTitle) {
				title = searchParams.get('title')?.slice(0, 100)
			} else {
				title = 'Astro Party'
			}
		}

		const fontData = await fetch(
			new URL(
				'../../../../public/fonts/79122e33-d8c9-4b2c-8add-f48bd7b317e0.ttf',
				import.meta.url,
			),
		).then((res) => res.arrayBuffer())

		return new ImageResponse(
			(
				<div
					tw="flex h-full w-full bg-[#009A52] text-white flex-col relative"
					style={{
						fontFamily: 'Maison',
						width: 1200,
						height: 630,
					}}
				>
					<Bg />
					<div tw="p-10 flex items-center justify-center w-full h-full">
						{/* <div tw="absolute z-10 w-full h-full left-8 top-8 border-4 border-black rounded-xl" /> */}
						<main tw="relative z-10 bg-[#009A52] rounded-xl border-4 border-black flex p-20 pb-24 flex-row w-full h-full flex-grow items-end justify-between">
							<div tw="flex items-center relative z-10 justify-center absolute left-20 top-20">
								<svg
									xmlns="http://www.w3.org/2000/svg"
									width={67 * 2}
									height={45 * 2}
									fill="none"
									viewBox="0 0 67 45"
								>
									<path
										fill="#fff"
										d="M14.34 18.03c.166.348.256.647.27.897a.885.885 0 0 1-.229.646c-.153.18-.41.361-.771.542-.556.264-.987.34-1.292.23-.306-.098-.59-.424-.855-.98L7.378 10.82l-4.064 8.545c-.278.542-.57.861-.875.959-.292.11-.716.034-1.272-.23-.361-.166-.625-.34-.792-.52a.959.959 0 0 1-.208-.668c.014-.264.11-.57.292-.917L5.94 6.59a1.645 1.645 0 0 1 1.459-.917c.208 0 .403.041.584.125.18.07.34.173.479.312a1.7 1.7 0 0 1 .375.5l5.502 11.422ZM3.876 16.844l1.292-2.689h4.44l1.291 2.689H3.877Zm16.548 3.606c-.736 0-1.383-.09-1.938-.271a6.213 6.213 0 0 1-1.397-.646 5.208 5.208 0 0 1-.896-.772 5.895 5.895 0 0 1-.458-.562c-.237-.306-.383-.57-.438-.792a1.056 1.056 0 0 1 .083-.709c.125-.236.334-.493.625-.771.292-.25.563-.382.813-.396.264-.028.521.035.771.188.25.152.494.368.73.646.333.402.66.687.98.854.333.153.68.23 1.042.23.458 0 .847-.056 1.167-.167.32-.111.563-.285.73-.521.166-.25.25-.563.25-.938a.87.87 0 0 0-.355-.73c-.222-.194-.528-.361-.917-.5a13.944 13.944 0 0 0-1.271-.396 17.998 17.998 0 0 1-1.376-.48 5.457 5.457 0 0 1-.917-.416 6.738 6.738 0 0 1-.834-.563 3.23 3.23 0 0 1-.688-.75 4.103 4.103 0 0 1-.437-1 5.168 5.168 0 0 1-.146-1.293c0-.82.201-1.55.604-2.188a4.15 4.15 0 0 1 1.668-1.501c.722-.375 1.549-.563 2.48-.563.625 0 1.167.056 1.626.167.472.111.868.243 1.188.396.32.153.57.306.75.459.194.139.326.25.396.333.389.361.604.674.646.938.042.25-.104.604-.438 1.063-.347.486-.694.757-1.042.813-.333.055-.715-.063-1.146-.355a6.64 6.64 0 0 0-.5-.416 1.883 1.883 0 0 0-.605-.292c-.222-.084-.52-.125-.896-.125-.222 0-.43.034-.625.104a1.41 1.41 0 0 0-.5.25 1.23 1.23 0 0 0-.334.417 1.07 1.07 0 0 0-.125.52c0 .32.104.578.313.772.222.195.507.354.854.48.362.11.758.222 1.188.333.445.097.896.215 1.355.354.417.14.82.313 1.209.521.389.195.736.445 1.042.75.306.306.549.688.73 1.147.194.459.291 1.021.291 1.688 0 .834-.16 1.55-.48 2.147a4.174 4.174 0 0 1-1.27 1.459 5.372 5.372 0 0 1-1.71.813 6.31 6.31 0 0 1-1.792.27ZM36.83 5.65c.236 0 .451.02.646.062a.75.75 0 0 1 .48.355c.138.18.207.5.207.958 0 .431-.069.744-.208.938a.757.757 0 0 1-.5.355 3.45 3.45 0 0 1-.667.062h-3.356v10.317c0 .264-.027.514-.083.75a.88.88 0 0 1-.396.584c-.208.139-.57.208-1.084.208-.5 0-.861-.07-1.084-.208a.88.88 0 0 1-.396-.584 4.682 4.682 0 0 1-.062-.771V8.381H26.93c-.223 0-.438-.02-.646-.062a.862.862 0 0 1-.5-.355c-.126-.194-.188-.514-.188-.959 0-.444.062-.757.187-.937a.757.757 0 0 1 .5-.355c.209-.041.424-.062.647-.062h9.9Zm4.386 14.59c-.5 0-.862-.077-1.084-.23a.969.969 0 0 1-.417-.604 4.682 4.682 0 0 1-.063-.772v-11.4c0-.264.021-.514.063-.75a.964.964 0 0 1 .417-.584c.222-.153.59-.23 1.104-.23h4.336c.57 0 1.153.105 1.75.313a5.064 5.064 0 0 1 1.647.959c.5.43.903.966 1.209 1.605.305.639.458 1.396.458 2.272 0 .583-.09 1.146-.27 1.688a4.811 4.811 0 0 1-.772 1.5 5.05 5.05 0 0 1-1.292 1.188 5.419 5.419 0 0 1-1.772.688h-3.71v2.772c0 .264-.027.521-.083.771a.965.965 0 0 1-.417.584c-.222.153-.59.23-1.104.23Zm8.795-.418c-.514.375-.924.521-1.23.438-.305-.083-.625-.354-.959-.813l-3.668-5.252 3.564-.458 2.689 3.855c.236.334.382.619.438.855a.762.762 0 0 1-.105.667c-.125.208-.368.444-.729.708Zm-7.19-7.065h2.897c.194 0 .395-.035.604-.104.208-.084.396-.202.563-.355.166-.152.305-.354.416-.604.112-.25.167-.549.167-.896 0-.403-.083-.75-.25-1.042a1.546 1.546 0 0 0-.667-.667 2.023 2.023 0 0 0-1.021-.25h-2.71v3.918Zm15.997 7.69c-1 0-1.945-.187-2.834-.562a7.619 7.619 0 0 1-2.314-1.584 8.008 8.008 0 0 1-1.563-2.355 7.322 7.322 0 0 1-.563-2.877c0-1.042.18-2.014.542-2.917a8.022 8.022 0 0 1 1.522-2.418 7.102 7.102 0 0 1 2.271-1.626 6.656 6.656 0 0 1 2.772-.583c1 0 1.939.194 2.814.583.89.375 1.66.903 2.313 1.584a7.62 7.62 0 0 1 1.543 2.376 7.35 7.35 0 0 1 .583 2.939 7.422 7.422 0 0 1-.562 2.876 7.632 7.632 0 0 1-1.522 2.376 7.26 7.26 0 0 1-2.272 1.605 6.466 6.466 0 0 1-2.73.584Zm-.104-3.167c.556 0 1.077-.111 1.563-.334a4.11 4.11 0 0 0 1.271-.896c.375-.39.66-.84.855-1.355a4.613 4.613 0 0 0 .313-1.709 4.34 4.34 0 0 0-.313-1.646 4.155 4.155 0 0 0-.875-1.376 3.83 3.83 0 0 0-1.272-.938 3.577 3.577 0 0 0-1.542-.333c-.542 0-1.056.11-1.542.333a4.133 4.133 0 0 0-1.272.938c-.361.39-.653.848-.875 1.376a4.396 4.396 0 0 0-.313 1.667 4.5 4.5 0 0 0 .313 1.667c.222.514.514.966.875 1.355.375.39.8.695 1.272.917.472.223.986.334 1.542.334ZM2.543 40.082c-.514 0-.883-.076-1.105-.229a.995.995 0 0 1-.396-.604 3.543 3.543 0 0 1-.083-.772v-11.38c0-.263.028-.513.083-.75a.97.97 0 0 1 .417-.604c.222-.153.59-.23 1.105-.23h4.272c.584 0 1.167.105 1.75.313a4.887 4.887 0 0 1 1.647.98c.515.43.925.966 1.23 1.605.32.639.48 1.39.48 2.25 0 .848-.16 1.592-.48 2.23a4.717 4.717 0 0 1-1.23 1.606c-.5.416-1.049.736-1.646.958a5.352 5.352 0 0 1-1.772.313H4.148v2.73c0 .264-.028.521-.084.772a.965.965 0 0 1-.417.583c-.222.153-.59.23-1.104.23ZM4.148 32.6h2.688c.306 0 .605-.063.896-.188a1.77 1.77 0 0 0 .75-.646c.21-.291.313-.667.313-1.125 0-.39-.083-.73-.25-1.021a1.777 1.777 0 0 0-.708-.688 2.022 2.022 0 0 0-1.022-.25H4.148V32.6Zm21.106 5.273c.166.347.257.646.27.896a.885.885 0 0 1-.229.646c-.152.181-.41.362-.77.542-.556.264-.987.34-1.293.23-.306-.098-.59-.424-.854-.98l-4.085-8.545-4.065 8.545c-.278.542-.57.861-.875.959-.292.11-.716.034-1.271-.23-.362-.166-.626-.34-.792-.52a.959.959 0 0 1-.209-.668c.014-.264.111-.57.292-.917l5.481-11.4a1.645 1.645 0 0 1 1.46-.917c.208 0 .402.041.583.125.18.07.34.173.48.312.152.14.277.306.375.5l5.502 11.422ZM14.79 36.685l1.292-2.689h4.44l1.292 2.689H14.79Zm13.693 3.397c-.5 0-.862-.076-1.084-.229a.969.969 0 0 1-.417-.604 4.681 4.681 0 0 1-.062-.772v-11.4c0-.264.02-.514.062-.75a.965.965 0 0 1 .417-.584c.223-.153.59-.23 1.105-.23h4.335c.57 0 1.153.105 1.75.313a5.066 5.066 0 0 1 1.647.959c.5.43.903.966 1.21 1.605.305.639.458 1.396.458 2.272 0 .583-.09 1.146-.271 1.688a4.811 4.811 0 0 1-.772 1.5 5.05 5.05 0 0 1-1.292 1.188 5.419 5.419 0 0 1-1.771.688h-3.71v2.772c0 .264-.028.521-.083.772a.965.965 0 0 1-.417.583c-.223.153-.59.23-1.105.23Zm8.795-.416c-.514.375-.924.52-1.23.437-.305-.083-.625-.354-.958-.813l-3.668-5.252 3.564-.458 2.688 3.855c.237.334.383.619.438.855a.762.762 0 0 1-.104.667c-.125.208-.368.444-.73.709ZM30.09 32.6h2.897c.194 0 .396-.035.604-.104.209-.084.396-.202.563-.355a1.78 1.78 0 0 0 .417-.604c.111-.25.167-.549.167-.896 0-.403-.084-.75-.25-1.042a1.545 1.545 0 0 0-.667-.667 2.022 2.022 0 0 0-1.022-.25h-2.71V32.6Zm19.64-7.107c.235 0 .45.02.645.062a.75.75 0 0 1 .48.355c.139.18.208.5.208.958 0 .431-.07.744-.208.938a.757.757 0 0 1-.5.355 3.461 3.461 0 0 1-.668.062h-3.355V38.54c0 .264-.028.514-.084.75a.88.88 0 0 1-.395.584c-.209.139-.57.208-1.084.208-.5 0-.862-.07-1.084-.208a.88.88 0 0 1-.396-.584 4.682 4.682 0 0 1-.063-.77V28.222h-3.397c-.222 0-.438-.02-.646-.062a.862.862 0 0 1-.5-.355c-.125-.194-.188-.514-.188-.958 0-.445.063-.758.188-.938a.756.756 0 0 1 .5-.355c.208-.041.424-.062.646-.062h9.9Zm14.202.25c.5.347.77.68.813 1 .055.306-.063.681-.355 1.126l-4.397 6.607v4.064c0 .264-.028.521-.084.771a.965.965 0 0 1-.417.584c-.208.153-.576.229-1.104.229-.514 0-.883-.076-1.105-.23a.97.97 0 0 1-.417-.604 4.825 4.825 0 0 1-.062-.792v-4.022l-4.419-6.607c-.306-.445-.424-.827-.354-1.146.07-.32.347-.647.834-.98.36-.236.667-.375.917-.417a.92.92 0 0 1 .687.146c.209.139.41.368.605.688l3.272 5.21 3.356-5.21c.222-.334.43-.563.625-.688a.923.923 0 0 1 .688-.146c.25.042.555.18.917.417Z"
									/>
								</svg>
							</div>
							<div tw="text-[50px] leading-tight pr-10">{title}</div>
							{image && (
								<div tw="flex -mb-10 -mr-5">
									<img src={image} width={450} height={450} />
								</div>
							)}
						</main>
					</div>
				</div>
			),
			{
				fonts: [
					{
						name: 'Maison',
						data: fontData,
						style: 'normal',
					},
				],
				width: 1200,
				height: 630,
			},
		)
	} catch (e: any) {
		return new Response('Failed to generate OG image', { status: 500 })
	}
}

const Bg = () => {
	return (
		<div tw="absolute -z-10 flex items-center justify-center left-0 top-0 h-full w-full">
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="1200"
				height="630"
				fill="none"
				viewBox="0 0 1200 630"
			>
				<g clipPath="url(#a)">
					<path fill="#00924E" d="M0 0h1200v630H0z" />
					<path
						fill="#EB5228"
						stroke="#000"
						strokeWidth={4}
						d="M-11.623-4H180.68l-300.471 637h-192.302L-11.623-4Z"
					/>
					<path
						fill="#F5D000"
						stroke="#000"
						strokeWidth={4}
						d="M180.679-4h192.302L72.51 633h-192.302L180.679-4Z"
					/>
					<path
						fill="#009A51"
						stroke="#000"
						strokeWidth={4}
						d="M372.981-4h192.302L264.811 633H72.509L372.981-4Z"
					/>
					<path
						fill="#6D92F4"
						stroke="#000"
						strokeWidth={4}
						d="M565.283-4h192.302L457.113 633H264.811L565.283-4Z"
					/>
					<path
						fill="#EB5228"
						stroke="#000"
						strokeWidth={4}
						d="M757.585-4h192.302L649.415 633H457.113L757.585-4Z"
					/>
					<path
						fill="#F5D000"
						stroke="#000"
						strokeWidth={4}
						d="M949.887-4h192.303L841.717 633H649.415L949.887-4Z"
					/>
					<path
						fill="#009A51"
						stroke="#000"
						strokeWidth={4}
						d="M1142.19-4h192.3l-300.47 637H841.717L1142.19-4Z"
					/>
					<path
						fill="#6D92F4"
						stroke="#000"
						strokeWidth="2"
						d="M1334.49-4h192.3l-300.47 637h-192.3L1334.49-4Z"
					/>
				</g>
				<defs>
					<clipPath id="a">
						<path fill="#fff" d="M0 0h1200v630H0z" />
					</clipPath>
				</defs>
			</svg>
		</div>
	)
}
