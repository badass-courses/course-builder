// EXAMPLE USAGE
// with resource: /api/og?resource=[SLUG_OR_ID]
// with custom title: /api/og?title=ANYTHING

import { ImageResponse } from 'next/og'
import { NextResponse } from 'next/server'
import { db } from '@/db'
// Add import for users table
import { contentResource, contentResourceResource, users } from '@/db/schema'
import { and, asc, eq, or, sql } from 'drizzle-orm'

export const runtime = 'edge'
export const revalidate = 60
// export const contentType = 'image/png'

const allowedOrigins =
	process.env.NODE_ENV === 'production'
		? ['https://egghead.io', 'https://builder.egghead.io']
		: ['*']

const corsHeaders = {
	'Access-Control-Allow-Origin': allowedOrigins.join(', '),
	'Access-Control-Allow-Methods': 'GET, OPTIONS',
	'Access-Control-Allow-Headers': 'Content-Type, Authorization',
}

export async function OPTIONS() {
	return NextResponse.json({}, { headers: corsHeaders })
}

export async function GET(request: Request) {
	try {
		console.log('Starting OG image generation', { url: request.url })

		const { searchParams } = new URL(request.url)
		const resourceTypesWithImages = [
			'post',
			'list',
			'event',
			'workshop',
			'tutorial',
			'self-paced',
		]
		const hasResource = searchParams.has('resource')
		const resourceSlugOrID = hasResource ? searchParams.get('resource') : null
		const hasTitle = searchParams.has('title')
		const hasImage = searchParams.has('image')
		let title
		let image = hasImage ? searchParams.get('image') : null
		let muxPlaybackId
		let resource
		let instructor = null
		let postType = null
		let lessonCount = 0

		if (resourceSlugOrID && !hasTitle) {
			console.log('Fetching resource for', resourceSlugOrID)

			resource = await db.query.contentResource.findFirst({
				extras: {
					fields:
						sql<string>`JSON_REMOVE(${contentResource.fields}, '$.body')`.as(
							'fields',
						),
				},
				where: and(
					or(
						eq(
							sql`JSON_EXTRACT (${contentResource.fields}, "$.slug")`,
							resourceSlugOrID,
						),
						eq(contentResource.id, resourceSlugOrID),
					),
				),
				with: {
					resources: {
						with: {
							resource: {
								extras: {
									fields:
										sql<string>`JSON_REMOVE(${contentResource.fields}, '$.srt', '$.wordLevelSrt', '$.transcript', '$.muxAssetId', '$.originalMediaUrl')`.as(
											'fields',
										),
								},
							},
						},
						orderBy: asc(contentResourceResource.position),
					},
				},
			})

			postType = resource?.fields.postType || null

			console.log('Resource fetched', { resource: resource })

			muxPlaybackId = resource?.resources?.[0]?.resource?.fields?.muxPlaybackId

			title = resource?.fields?.title

			if (resource && resourceTypesWithImages.includes(resource.type)) {
				image =
					resource?.fields?.coverImage?.url ||
					resource.fields?.image ||
					(muxPlaybackId &&
						`https://image.mux.com/${muxPlaybackId}/thumbnail.png?time=${resource?.fields.thumbnailTime || 0}&width=1200`)
			}

			if (resource) {
				console.log('Fetching instructor for userId', resource.createdById)
				instructor = await db.query.users.findFirst({
					where: eq(users.id, resource.createdById),
					columns: {
						name: true,
						image: true,
						email: true,
					},
				})
				console.log('Instructor fetched', { instructor })

				if (postType === 'course') {
					console.log('Fetching lesson count for course', resource.id)
					const result = await db
						.select({
							count: sql<number>`COUNT(*)`.as('count'),
						})
						.from(contentResourceResource)
						.where(eq(contentResourceResource.resourceOfId, resource.id))

					lessonCount = result[0]?.count || 0
					console.log('Lesson count', lessonCount)
				}
			}
		} else {
			if (hasTitle) {
				title = searchParams.get('title')?.slice(0, 100)
			} else {
				title = 'Learn Professional Programming'
			}
		}

		const seed = resourceSlugOrID || title || 'default-seed'

		console.log('Generating ImageResponse with', {
			title,
			image,
			lessonCount,
			instructor,
		})

		const response = new ImageResponse(
			(
				<div
					tw="flex h-full w-full bg-white flex-col"
					style={{
						fontFamily: 'Inter',
						color: '#FFFFFF',
						width: 1200,
						height: 630,
						background: 'linear-gradient(to top right, #111827, #374151)',
					}}
				>
					<div tw="flex items-center absolute left-20 top-16 justify-center h-12 w-48">
						<svg
							width="100%"
							height="100%"
							xmlns="http://www.w3.org/2000/svg"
							id="Layer_1"
							viewBox="0 0 1036.83 257.88"
						>
							<path
								fill="#fff"
								d="M124.63,257.88a98,98,0,0,1-98-93.13v-.19A23.37,23.37,0,0,1,6.89,147.1C4.15,136.38.45,120.35,0,104.95A21.92,21.92,0,0,1,13,84.22c8-3.59,19.4-6.52,33.78-8.75,8.05-18.59,17.54-34.75,27.58-46.93C90,9.6,106.91,0,124.63,0s34.62,9.6,50.23,28.54c10,12.18,19.53,28.32,27.56,46.87,14.28,2.16,25.67,5.11,33.89,8.77a21.89,21.89,0,0,1,13,20.69c-.44,15.49-4.14,31.52-6.88,42.23a23.37,23.37,0,0,1-19.77,17.47v.18A98.49,98.49,0,0,1,216,195.61a98.15,98.15,0,0,1-91.41,62.26Z"
							/>
							<path
								fill="#fcfbfa"
								d="M124.57,16.31c45.4,0,82.21,97.59,82.21,143a82.21,82.21,0,1,1-164.43,0C42.36,113.9,79.17,16.31,124.57,16.31Z"
							/>
							<path
								fill="#252526"
								d="M228.82,95.07,195.28,106.9s5.19,15.78,5.24,15.9,33.41-4.3,33.41-4.3Z"
							/>
							<path
								fill="#252526"
								d="M20.33,95.07,53.87,106.9s-5.19,15.78-5.24,15.9-33.41-4.3-33.41-4.3Z"
							/>
							<path
								fill="#e0e0e0"
								d="M90.06,92.27a10.46,10.46,0,0,1,10.57,8.8,137.84,137.84,0,0,1,2.1,17.29,22.14,22.14,0,0,1-.44,4.84c-.42-4.18-1-8.16-1.65-11.62a10.46,10.46,0,0,0-10.57-8.8,286.72,286.72,0,0,0-37.67,2.86c1.18-3.67,2.45-7.35,3.81-11A284.59,284.59,0,0,1,90.06,92.27Z"
							/>
							<path
								fill="#e0e0e0"
								d="M206.63,155.66c-29.61-1.53-54.9-11-60.61-14.39-4.45-2.13-10.13-6.64-11.76-17.92-1.09,12.43,1.25,23.75,12.92,29.34.86.52,23.2,11.57,59.25,13.47.19-2.26.29-4.54.29-6.85C206.71,158.13,206.68,156.91,206.63,155.66Z"
							/>
							<path
								fill="#e0e0e0"
								d="M42.6,155.66c29.61-1.53,54.9-11,60.61-14.39,4.45-2.13,10.13-6.64,11.76-17.92,1.09,12.43-1.25,23.75-12.92,29.34-.86.52-23.2,11.57-59.25,13.47-.19-2.26-.29-4.54-.29-6.85C42.52,158.13,42.55,156.91,42.6,155.66Z"
							/>
							<path
								fill="#e0e0e0"
								d="M159,92.27a10.46,10.46,0,0,0-10.57,8.8,137.84,137.84,0,0,0-2.1,17.29,22.14,22.14,0,0,0,.44,4.84c.42-4.18,1-8.16,1.65-11.62a10.46,10.46,0,0,1,10.57-8.8,286.72,286.72,0,0,1,37.67,2.86c-1.18-3.67-2.45-7.35-3.81-11A284.59,284.59,0,0,0,159,92.27Z"
							/>
							<path
								fill="#56555c"
								d="M52.66,83.38c8.07-19.58,17.76-36.52,28-49,13.95-16.92,28.72-25.5,43.89-25.5s29.94,8.58,43.89,25.49c10.28,12.46,20,29.4,28,49l.39,1-1-.14c-2.85-.38-5.17-.65-8-1l-.35,0-.14-.32c-9.08-21.2-24.58-48.89-44.61-60.46a36.25,36.25,0,0,0-18.18-5.28,36.25,36.25,0,0,0-18.18,5.28C86.39,34,70.93,61.56,61.78,82.88l-.14.32-.35,0c-2.85.3-5.17.58-8,1l-1,.14Z"
							/>
							<path
								fill="#56555c"
								d="M207.57,145.42c-2.23-.06-4.48-.15-6.69-.28l-.69,0-.09-.69c-2-15.59-6.48-33.84-12.7-51.38L187,91.76l1.35.18c2.54.34,5,.72,7.4,1.12l.49.08.16.47c6,17.51,10.25,35.58,12.07,50.88l.11,1Z"
							/>
							<path
								fill="#252526"
								d="M200.24,105.93c-1.2-4.11-2.5-8.22-3.89-12.31l-.16-.47-.49-.08c-2.36-.4-4.85-.78-7.4-1.12L187,91.76l.45,1.28c1.38,3.89,2.67,7.81,3.87,11.74C195.59,105.27,198,105.62,200.24,105.93Z"
							/>
							<path
								fill="#56555c"
								d="M41.28,144.14c1.82-15.3,6.11-33.37,12.07-50.88l.16-.47L54,92.7c2.36-.4,4.85-.78,7.4-1.12l1.35-.18-.45,1.28c-6.21,17.54-10.72,35.78-12.7,51.38l-.09.69-.69,0c-2.22.13-4.47.22-6.69.28l-1,0Z"
							/>
							<path
								fill="#252526"
								d="M54,92.7l-.49.08-.16.47c-1.39,4.09-2.69,8.22-3.89,12.33,4.17-.53,5.38-.47,8.87-.84,1.23-4,2.55-8.07,4-12.06l.45-1.28-1.35.18C58.85,91.93,56.36,92.31,54,92.7Z"
							/>
							<path
								fill="#56555c"
								d="M124.57,248.91a89.65,89.65,0,0,1-83.41-56.78A90.76,90.76,0,0,1,35,155.64l0-.56h.56c2.92-.07,4.92-.15,7-.26l.65,0,0,.65a81.59,81.59,0,0,0,5.43,33.37,81.4,81.4,0,0,0,134.59,26.87,80.63,80.63,0,0,0,17.15-26.86,81.56,81.56,0,0,0,5.43-33.37l0-.65.65,0c2.91.15,4.91.21,7,.26h.56l0,.56A90.77,90.77,0,0,1,208,192.11a89.56,89.56,0,0,1-83.41,56.81Z"
							/>
							<path
								fill="#252526"
								d="M43.49,166.17a88.23,88.23,0,0,1-.22-10.74l0-.65-.65,0c-2.1.11-4.1.19-7,.26h-.56l0,.56a95.23,95.23,0,0,0,.24,10.77h.27c2.7,0,5.34-.12,7.85-.24Z"
							/>
							<path
								fill="#252526"
								d="M214.09,155.08h-.56c-2.12,0-4.12-.11-7-.26l-.65,0,0,.65a88.21,88.21,0,0,1-.21,10.64l8.2.35a95.13,95.13,0,0,0,.24-10.77Z"
							/>
							<path
								fill="#252526"
								d="M218.71,156.91a195.17,195.17,0,0,1-50.78-6.52,122.52,122.52,0,0,1-20.75-7.53l-.16-.12c-14-6.69-14.51-20.11-13.21-32.34.33-3.09-.8-7.18-4.06-9.35a9.24,9.24,0,0,0-10.26,0c-3.26,2.16-4.39,6.24-4.06,9.32,1.3,12.24.75,25.66-13.21,32.35l-.16.08a122.25,122.25,0,0,1-20.75,7.61,195.18,195.18,0,0,1-50.78,6.52h-.08a15.66,15.66,0,0,1-15-11.85C12.79,134.81,9.25,119.43,8.84,105a14.23,14.23,0,0,1,8.42-13.45C36.54,83,75.56,79.78,92.2,80a21.51,21.51,0,0,1,15.46,6.39,41.55,41.55,0,0,1,17-3.92,41.54,41.54,0,0,1,17,3.91A21.44,21.44,0,0,1,157,80C167,79.85,210,81.71,232,91.5a14.17,14.17,0,0,1,8.42,13.39c-.41,14.46-4,29.92-6.57,40.17a15.66,15.66,0,0,1-15,11.85Zm-59.61-64a9.9,9.9,0,0,0-10,8.31,138.2,138.2,0,0,0-2.1,17.21c-.08,6.6,2.29,11.12,7,13.43,17.63,7.86,38.12,11.75,62.64,11.87a4.16,4.16,0,0,0,4-3.1c2.33-9.11,5.47-22.65,5.83-35.1a2.92,2.92,0,0,0-1.74-2.77C208,95.24,172.16,92.67,159.1,92.87ZM24.41,102.74a2.92,2.92,0,0,0-1.74,2.77c.36,12.42,3.5,26,5.83,35.1a4.14,4.14,0,0,0,4,3.1c24.54-.12,45-4,62.69-11.88,4.72-2.3,7.08-6.83,7-13.45a137.1,137.1,0,0,0-2.11-17.19,9.9,9.9,0,0,0-10-8.31C82.47,92.76,43.35,94.3,24.41,102.74Z"
							/>
							<path
								fill="#fffffb"
								d="M361.45,147.89a33.07,33.07,0,0,1-4.59,9.74,33.65,33.65,0,0,1-7.65,8,36.81,36.81,0,0,1-10.55,5.4,41.81,41.81,0,0,1-13.29,2,43.55,43.55,0,0,1-15.62-2.82,37.8,37.8,0,0,1-13-8.29,39.75,39.75,0,0,1-8.94-13.37,45.93,45.93,0,0,1-3.3-17.88,44.4,44.4,0,0,1,3.22-17.23,40.14,40.14,0,0,1,8.62-13.13,38.71,38.71,0,0,1,12.48-8.38,37.46,37.46,0,0,1,14.66-3q18.52,0,28.83,11T362.57,130q0,2.26-.16,4.27t-.16,2.33H305.56a17.07,17.07,0,0,0,1.85,7.17,19.92,19.92,0,0,0,4.35,5.72,19.61,19.61,0,0,0,6.2,3.79,20.79,20.79,0,0,0,7.57,1.37q7.57,0,11.84-3.38a19.26,19.26,0,0,0,6.2-8.7Zm-20-25.93a19.41,19.41,0,0,0-1.21-5.72,13.8,13.8,0,0,0-3.22-5,16.63,16.63,0,0,0-5.48-3.54,20.33,20.33,0,0,0-7.81-1.37,17.91,17.91,0,0,0-7.41,1.45,18.24,18.24,0,0,0-5.48,3.71,16.4,16.4,0,0,0-3.46,5A15.78,15.78,0,0,0,306,122Z"
							/>
							<path
								fill="#fffffb"
								d="M390.15,169.8a17.78,17.78,0,0,0,6,10.79q4.83,4.18,12.56,4.19,10.14,0,15.62-5.23t5.48-16.83v-5.8a21.8,21.8,0,0,1-7.89,7q-5.48,3.14-14.17,3.14a36.79,36.79,0,0,1-14.66-2.9,34.94,34.94,0,0,1-11.68-8.05,37.92,37.92,0,0,1-7.73-12.16,42.65,42.65,0,0,1-.08-30.28,39.5,39.5,0,0,1,7.57-12.32A35,35,0,0,1,392.73,93a35.91,35.91,0,0,1,15-3.06q9.5,0,15,3.38t7.57,7.41V91.36h20.61v70.7a52.48,52.48,0,0,1-2.34,15.7,35,35,0,0,1-20.21,22.39q-7.89,3.46-19,3.46a45,45,0,0,1-14.9-2.33A39.94,39.94,0,0,1,382.74,195a32.63,32.63,0,0,1-8.05-9.18A29.73,29.73,0,0,1,370.83,175Zm21.26-21.1a17.78,17.78,0,0,0,13.45-5.48q5.23-5.47,5.23-14.66T424.62,114a18.14,18.14,0,0,0-13.21-5.4,20.19,20.19,0,0,0-7.49,1.37,17.08,17.08,0,0,0-6,4,18.87,18.87,0,0,0-4,6.36,22.35,22.35,0,0,0-1.45,8.21q0,9.34,5.31,14.74A18.38,18.38,0,0,0,411.41,148.7Z"
							/>
							<path
								fill="#fffffb"
								d="M480.22,169.8a17.78,17.78,0,0,0,6,10.79q4.83,4.18,12.56,4.19,10.14,0,15.62-5.23t5.48-16.83v-5.8a21.8,21.8,0,0,1-7.89,7q-5.48,3.14-14.17,3.14a36.79,36.79,0,0,1-14.66-2.9,34.94,34.94,0,0,1-11.68-8.05,37.92,37.92,0,0,1-7.73-12.16,42.65,42.65,0,0,1-.08-30.28,39.5,39.5,0,0,1,7.57-12.32A35,35,0,0,1,482.79,93a35.91,35.91,0,0,1,15-3.06q9.5,0,15,3.38t7.57,7.41V91.36h20.61v70.7a52.48,52.48,0,0,1-2.34,15.7,35,35,0,0,1-20.21,22.39q-7.89,3.46-19,3.46a45,45,0,0,1-14.9-2.33A39.94,39.94,0,0,1,472.81,195a32.63,32.63,0,0,1-8.05-9.18A29.73,29.73,0,0,1,460.89,175Zm21.26-21.1a17.78,17.78,0,0,0,13.45-5.48q5.23-5.47,5.23-14.66T514.68,114a18.14,18.14,0,0,0-13.21-5.4A20.19,20.19,0,0,0,494,110a17.08,17.08,0,0,0-6,4,18.87,18.87,0,0,0-4,6.36,22.35,22.35,0,0,0-1.45,8.21q0,9.34,5.31,14.74A18.38,18.38,0,0,0,501.47,148.7Z"
							/>
							<path
								fill="#fffffb"
								d="M572.87,170.6H553.68V54h19.19V98a21.34,21.34,0,0,1,9.82-6.68,36.13,36.13,0,0,1,11.6-2,31.79,31.79,0,0,1,13.12,2.5,26.06,26.06,0,0,1,9.18,6.68,27.2,27.2,0,0,1,5.4,10,41.68,41.68,0,0,1,1.77,12.24V170.6H602.34V124.38a18,18,0,0,0-3.46-11.27q-3.46-4.51-11.19-4.51-6.77,0-10.63,4.43a17.53,17.53,0,0,0-4.19,11Z"
							/>
							<path
								fill="#fffffb"
								d="M709.57,147.89a33.07,33.07,0,0,1-4.59,9.74,33.65,33.65,0,0,1-7.65,8,36.81,36.81,0,0,1-10.55,5.4,41.81,41.81,0,0,1-13.29,2,43.55,43.55,0,0,1-15.62-2.82,37.8,37.8,0,0,1-13-8.29,39.75,39.75,0,0,1-8.94-13.37,45.93,45.93,0,0,1-3.3-17.88,44.4,44.4,0,0,1,3.22-17.23,40.14,40.14,0,0,1,8.62-13.13,38.71,38.71,0,0,1,12.48-8.38,37.46,37.46,0,0,1,14.66-3q18.52,0,28.83,11T710.7,130q0,2.26-.16,4.27t-.16,2.33H653.68a17.07,17.07,0,0,0,1.85,7.17,19.92,19.92,0,0,0,4.35,5.72,19.61,19.61,0,0,0,6.2,3.79,20.79,20.79,0,0,0,7.57,1.37q7.57,0,11.84-3.38a19.26,19.26,0,0,0,6.2-8.7ZM689.6,122a19.41,19.41,0,0,0-1.21-5.72,13.8,13.8,0,0,0-3.22-5,16.63,16.63,0,0,0-5.48-3.54,20.33,20.33,0,0,0-7.81-1.37,17.91,17.91,0,0,0-7.41,1.45A18.24,18.24,0,0,0,659,111.5a16.4,16.4,0,0,0-3.46,5,15.78,15.78,0,0,0-1.37,5.47Z"
							/>
							<path
								fill="#fffffb"
								d="M717.81,149a21.94,21.94,0,0,1,6.92-16.59,24.25,24.25,0,0,1,7.49-4.83,41.21,41.21,0,0,1,9.26-2.58l19.49-2.9q3.38-.48,4.67-2a5.45,5.45,0,0,0,1.29-3.63,9.56,9.56,0,0,0-3.3-7.25q-3.3-3.06-10.07-3.06-7.09,0-10.87,3.86a14.53,14.53,0,0,0-4.27,9l-19-4a26.1,26.1,0,0,1,2.9-9.34,28.81,28.81,0,0,1,6.6-8.38,33.31,33.31,0,0,1,10.31-6,39.64,39.64,0,0,1,14.17-2.34,45.18,45.18,0,0,1,15.94,2.5A29.79,29.79,0,0,1,780.06,98a24.5,24.5,0,0,1,6,9.58,35.44,35.44,0,0,1,1.85,11.43v39q0,3.22.32,6.84t.65,5.72H769.19a41.36,41.36,0,0,1-.56-4.43q-.24-2.82-.24-5.07a27.63,27.63,0,0,1-8.78,8.21q-5.72,3.54-14.57,3.54a30.56,30.56,0,0,1-11.36-2,27.16,27.16,0,0,1-8.62-5.31,22.52,22.52,0,0,1-5.39-7.57A22.2,22.2,0,0,1,717.81,149Zm31.73,7.89a23.87,23.87,0,0,0,6.52-.88,13.82,13.82,0,0,0,5.56-3.06,15.48,15.48,0,0,0,3.86-5.64,22.88,22.88,0,0,0,1.45-8.78V135l-17.88,2.74a14.1,14.1,0,0,0-7,3q-2.82,2.33-2.82,7a9.18,9.18,0,0,0,2.58,6.36Q744.38,156.91,749.54,156.91Z"
							/>
							<path
								fill="#fffffb"
								d="M878,156.27q0,4,.16,8t.48,6.36H858.23a27.47,27.47,0,0,1-.56-3.86q-.24-2.58-.24-5.32a22,22,0,0,1-8.46,7.89,27.64,27.64,0,0,1-13.77,3.22,38.15,38.15,0,0,1-15.62-3.14,36,36,0,0,1-12.16-8.7,40.78,40.78,0,0,1-8-13.21,48.86,48.86,0,0,1-.08-32.93,40.57,40.57,0,0,1,7.81-13.13,38.14,38.14,0,0,1,36.32-11A29.56,29.56,0,0,1,850,92.82,18.41,18.41,0,0,1,854.44,96a13,13,0,0,1,2.5,3.3V54H878Zm-59.91-25.45q0,10.63,5.56,16.59a19.36,19.36,0,0,0,27.94,0q5.64-6,5.64-16.75,0-10.63-5.64-16.35a19.64,19.64,0,0,0-27.78.08Q818.12,120.2,818.12,130.82Z"
							/>
							<path
								fill="#fffffb"
								d="M889,162.28a8,8,0,0,1,2.35-5.81,7.73,7.73,0,0,1,5.76-2.41,8.22,8.22,0,0,1,8.22,8.22,7.73,7.73,0,0,1-2.41,5.76,8,8,0,0,1-5.81,2.35,8,8,0,0,1-8.1-8.1Z"
							/>
							<path
								fill="#fffffb"
								d="M915.94,75.91a11.69,11.69,0,0,1,23.38,0,11.69,11.69,0,1,1-23.38,0Zm1.86,94.6V95.72h19.66V170.5Z"
							/>
							<path
								fill="#fffffb"
								d="M947.71,133c0-21.21,14.86-39.17,39.48-39.17,24.77,0,39.63,18,39.63,39.17s-14.86,39.33-39.63,39.33C962.57,172.36,947.71,154.25,947.71,133Zm58.68,0c0-11.61-6.81-21.68-19.2-21.68-12.23,0-19,10.06-19,21.68,0,11.77,6.81,21.83,19,21.83C999.57,154.87,1006.39,144.8,1006.39,133Z"
							/>
						</svg>
					</div>
					<main tw="flex p-20 pb-24 relative z-10 flex-row w-full h-full flex-grow items-end justify-between">
						<div tw="flex flex-col">
							<div tw="text-[32px] uppercase mb-4 text-gray-300">
								{postType
									? postType.toUpperCase() +
										(postType === 'course' ? ` - ${lessonCount} lessons` : '')
									: ''}
							</div>
							<div
								tw={`text-[64px] text-white leading-tight pr-16 max-w-[900px] line-clamp-3`}
							>
								{title}
							</div>
							<div tw="flex items-center mt-4 text-[32px] text-gray-200">
								{`by ${instructor?.name || 'egghead instructor'}`}
								<span>
									{instructor?.email &&
										instructor.image?.includes('gravatar.com') && (
											<img
												src={`https:${instructor.image}`}
												tw="w-[48px] h-[48px] rounded-full ml-4"
											/>
										)}
								</span>
								<span>
									{instructor?.email &&
										instructor.image &&
										!instructor.image?.includes('gravatar.com') && (
											<img
												src={instructor.image || ''}
												tw="rounded-full ml-4 w-[48px] h-[48px]"
											/>
										)}
								</span>
							</div>
						</div>
					</main>
				</div>
			),
			{
				debug: false,
			},
		)

		// Add CORS headers to the response
		Object.entries(corsHeaders).forEach(([key, value]) => {
			response.headers.set(key, value)
		})

		return response
	} catch (e: any) {
		console.error('Error generating OG image', e)
		const errorMessage =
			process.env.NODE_ENV === 'production'
				? 'Failed to generate OG image'
				: `Failed to generate OG image: ${e.message}`
		return new Response(errorMessage, {
			status: 500,
			headers: corsHeaders,
		})
	}
}
